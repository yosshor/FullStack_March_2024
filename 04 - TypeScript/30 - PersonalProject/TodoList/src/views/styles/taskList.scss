$transition-duration: 0.8s;
$transition-timing: ease-in-out;

@mixin transition($property) {
    transition: $property $transition-duration $transition-timing;
}




.wrapper {
    display: flex;
    width: 100vw;
    height: 100vh;
    flex-direction: column;
    text-align: center;
    align-items: center;



    .tasks-list {
        display: flex;
        flex-direction: column;
        gap: 10px;
        justify-content: center;
        width: 80%;
        background-color: #676869;
        // @include transition(background-color);
        transition: all 0.4s ease;


        .task-info {
            display: flex;
            width: 100%;
            height: 100%;
            flex-direction: column;
            justify-content: space-evenly;

            form {
                display: flex;
                flex-direction: row;
                width: 95%;
                height: 6vh;
                padding-top: 20px;
                justify-content: center;

                input[type=text] {
                    width: 250px;
                    height: 30px;
                    margin-right: 30px;
                    border-radius: 10px;
                    background-color: white;
                    color: black;
                }

                input[type=datetime-local] {
                    padding-right: 10px;
                    border-radius: 10px;
                    height: 35px;
                    margin-right: 10px;
                    background: url('data:image/svg+xml;base64,...') no-repeat right;
                    color: white;
                    border: 1px solid white;
                }

                button {
                    width: 80px;
                    height: 30px;
                    border-radius: 10px;
                    border: 1px solid black;
                    align-items: center;
                    justify-content: center;
                    display: flex;
                    border: 1px solid white;

                    &:hover {
                        cursor: pointer;
                        opacity: 0.8;
                    }
                }
            }

            .task {
                display: flex;
                flex-direction: row;
                gap: 10px;
                justify-content: center;
                align-items: center;
                width: 90%;

                .name {
                    width: 12vw;
                }
                .task-done{
                    cursor: pointer;
                    padding-right: 5px;
                    
                }
                .desc,
                .be-done {
                    width: 20vw;

                }

                .buttons {
                    width: 15%;
                    display: flex;
                    flex-direction: row;
                    justify-content: space-between;

                    button {
                        margin-left: 2px;
                    }
                }

                .done {
                    width: 50px;
                }

                .edit {
                    background-color: lightgreen;
                    color: black;
                }
            }

        }
    }
}

button.delete {
    background-color: red;
    // background-color: #3498db;
    animation: changeColor 0.5s ease-in-out;

    &:hover {
        animation: changeColor 0.5s ease-in-out reverse;
    }

}

@keyframes slow {
    from {
        top: 0px;
    }

    to {
        top: 20px;
    }

}

@mixin fadeIn($duration, $delay:0s) {
    animation: fadeInEffect $duration ease-in-out $delay forwards;
}

@keyframes fadeInEffect {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes changeColor {
    0% {
        background-color: red;
    }

    100% {
        background-color: #2980b9;
    }
}